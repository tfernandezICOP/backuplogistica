/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package logisticaigu;

import Controladoras.ControladoraPaquete;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import logisticalogica.Paquete;

/**
 *
 * @author ULTRA
 */
public class ConsultarEstadoPaquetes extends javax.swing.JFrame {
ControladoraPaquete controladoraPaquete = new ControladoraPaquete();
    private List<Paquete> paquetes;
    private Paquete paqueteSeleccionado; // Declaración de paqueteSeleccionado como variable de instancia
  private String rolUsuario;



    /**
     * Creates new form ConsultarEstadoPaquete
     */
    public ConsultarEstadoPaquetes(String rolUsuario) {
        initComponents();
        this.rolUsuario = rolUsuario;
        mostrarTodosLosPaquetes();
        inicializarVentana();
       try {
        MaskFormatter formatter = new MaskFormatter("##/##/####");
        formatter.setPlaceholderCharacter('_');
        jFormattedTextField1.setFormatterFactory(new DefaultFormatterFactory(formatter));
        jFormattedTextField1.setColumns(10); // Establecer el número de columnas para ajustar el tamaño del campo
        jFormattedTextField1.setFocusLostBehavior(JFormattedTextField.COMMIT); // Confirmar el valor al perder el foco
    } catch (ParseException ex) {
        ex.printStackTrace();
    }
      jTextField1.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }
});

// Agregar DocumentListener para jFormattedTextField1
jFormattedTextField1.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }
});
        tablafiltrar.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Verificar si hay una fila seleccionada en la tabla
                if (!e.getValueIsAdjusting() && tablafiltrar.getSelectedRow() != -1) {
                    jButton2.setEnabled(true); // Habilitar el botón "Aceptar"
                } else {
                    jButton2.setEnabled(false); // Deshabilitar el botón "Aceptar"
                }
            }
        });
       String[] estados = {"TODOS", "PENDIENTE", "PLANIFICADO", "EN CAMINO", "DEVUELTO", "ENTREGADO"};

    jComboBox1.setModel(new DefaultComboBoxModel<>(estados));

    jComboBox1.setSelectedItem("TODOS");

    jComboBox1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Obtén el estado seleccionado del jComboBox1 y conviértelo a minúsculas
            String estadoSeleccionado = ((String) jComboBox1.getSelectedItem()).toLowerCase();
            // Si se selecciona "TODOS", mostrar todos los paquetes
            if (estadoSeleccionado.equals("todos")) {
                mostrarTodosLosPaquetes();
            } else {
                // Filtra la tabla por estado
                filtrarPorEstado(estadoSeleccionado);
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablafiltrar = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Codigo del paquete:");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Estado del paquete");

        tablafiltrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tablafiltrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo del paquete", "Descripcion", "Emisor", "Receptor", "Domicilio de retiro", "Domicilio de entrega", "Estado", "Fecha Recibido"
            }
        ));
        jScrollPane1.setViewportView(tablafiltrar);

        jButton2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha:");

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        jLabel4.setText("Estado:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1253, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(89, 89, 89)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int filaSeleccionada = tablafiltrar.getSelectedRow();

        if (filaSeleccionada != -1) {
            paqueteSeleccionado = paquetes.get(filaSeleccionada);

            // Aquí debes mostrar un JOptionPane con el estado del paquete
            mostrarEstadoPaquete();

        } else {
            // No se ha seleccionado ningún paquete
            javax.swing.JOptionPane.showMessageDialog(
                this,
                "Por favor, seleccione un paquete antes de continuar.",
                "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE
            );
    }//GEN-LAST:event_jButton2ActionPerformed
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Menu atras = new Menu(rolUsuario);
        atras.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

     private void inicializarVentana() {
        tablafiltrar.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = tablafiltrar.getSelectedRow();
            if (selectedRow >= 0) {
                paqueteSeleccionado = paquetes.get(selectedRow);
                // Realizar cualquier acción adicional que desees con el paquete seleccionado
                // por ejemplo: mostrar sus detalles en otra parte de la interfaz gráfica
            }
        });
    }
   
  private void mostrarPaquetesEnTabla(List<Paquete> paquetes) {
    DefaultTableModel modelo = (DefaultTableModel) tablafiltrar.getModel();
    modelo.setRowCount(0); // Elimina todas las filas existentes en la tabla

    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

    for (Paquete paquete : paquetes) {
        String nombreApellidoEmisor = "Sin emisor";
        if (paquete.getEmisor() != null) {
            nombreApellidoEmisor = paquete.getEmisor().getNombre() + " " + paquete.getEmisor().getApellido();
        }
        String nombreApellidoReceptor = "Sin receptor";
        if (paquete.getReceptor() != null) {
            nombreApellidoReceptor = paquete.getReceptor().getNombre() + " " + paquete.getReceptor().getApellido();
        }

        String fechaRecibido = dateFormat.format(paquete.getFechaRecibido());

        modelo.addRow(new Object[]{
            paquete.getCodigo_paquete(),
            paquete.getDescripcion(),
            nombreApellidoEmisor,
            nombreApellidoReceptor,
            paquete.getDomicilioRetiro(),
            paquete.getDomicilioEntrega(),
            paquete.getEstado(),
            fechaRecibido
            
        });
    }
}



   private void mostrarTodosLosPaquetes() {
        paquetes = controladoraPaquete.obtenerTodosLosPaquetes();
        mostrarPaquetesEnTabla(paquetes);
    }
   
  private void filtrarPorCodigo(String codigoPaqueteTexto) {
    List<Paquete> paquetesFiltrados = new ArrayList<>();
    if (codigoPaqueteTexto.isEmpty()) {
        mostrarTodosLosPaquetes(); // Si el campo de texto está vacío, mostrar todos los paquetes
    } else {
        try {
            int codigoPaquete = Integer.parseInt(codigoPaqueteTexto);
            for (Paquete paquete : paquetes) {
                if (String.valueOf(paquete.getCodigo_paquete()).contains(codigoPaqueteTexto)) {
                    paquetesFiltrados.add(paquete);
                }
            }
            mostrarPaquetesEnTabla(paquetesFiltrados);
        } catch (NumberFormatException ex) {
            System.out.println("Ingrese un número válido para el código de paquete.");
        }
    }
}


private void filtrarPorFecha(String fechaTexto) {
    List<Paquete> paquetesFiltrados = new ArrayList<>();
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    try {
        // Verificar si el campo de fecha no está vacío y contiene una fecha completa
        if (!fechaTexto.isEmpty() && fechaTexto.matches("\\d{2}/\\d{2}/\\d{4}")) {
            java.util.Date fechaFiltro = dateFormat.parse(fechaTexto);
            for (Paquete paquete : paquetes) {
                if (paquete.getFechaRecibido().equals(fechaFiltro)) {
                    paquetesFiltrados.add(paquete);
                }
            }
            mostrarPaquetesEnTabla(paquetesFiltrados);
        } else {
            // Si el campo de fecha está vacío o no contiene una fecha completa, mostrar todos los paquetes
            mostrarTodosLosPaquetes();
        }
    } catch (ParseException ex) {
        System.out.println("Ingrese una fecha válida en el formato dd/MM/yyyy.");
    }
}




   private void mostrarEstadoPaquete() {
    // Muestra un JOptionPane con el estado del paquete
    javax.swing.JOptionPane.showMessageDialog(
            this,
            "Estado del paquete: " + paqueteSeleccionado.getEstado(),
            "Estado del Paquete",
            javax.swing.JOptionPane.INFORMATION_MESSAGE
    );
}
private void filtrarPorEstado(String estado) {
    estado = estado.toLowerCase();

    List<Paquete> paquetesFiltrados = new ArrayList<>();
    for (Paquete paquete : paquetes) {
        String estadoPaquete = paquete.getEstado().toLowerCase();
        if (estadoPaquete.equals(estado)) {
            paquetesFiltrados.add(paquete);
        }
    }
    mostrarPaquetesEnTabla(paquetesFiltrados);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablafiltrar;
    // End of variables declaration//GEN-END:variables
}
