/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package logisticaigu;

import Controladoras.ControladoraPaquete;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import logisticalogica.Paquete;

/**
 *
 * @author ULTRA
 */
public class ConsultadorEstadoPaquete extends javax.swing.JFrame {
ControladoraPaquete controladoraPaquete = new ControladoraPaquete();
    private List<Paquete> paquetes;
    private Paquete paqueteSeleccionado; // Declaración de paqueteSeleccionado como variable de instancia
  private String rolUsuario;

    /**
     * Creates new form ConsultadorEstadoPaquete
     */
    public ConsultadorEstadoPaquete(String rolUsuario) {
        initComponents();
        this.rolUsuario = rolUsuario;
        mostrarTodosLosPaquetes();
        inicializarVentana();
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Abre el JFrame en pantalla completa

        // Crear un renderizador personalizado para los encabezados de las columnas
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setHorizontalAlignment(SwingConstants.LEFT); // Alinear a la izquierda     horizontalmente
        headerRenderer.setVerticalAlignment(SwingConstants.CENTER); // Centrar verticalmente
        headerRenderer.setFont(new Font("Arial", Font.PLAIN, 18)); // Establecer la fuente a Arial 18  
        // Aplicar el renderizador personalizado a los encabezados de las columnas
        tablafiltrar.getTableHeader().setDefaultRenderer(headerRenderer);
  
       try {
        MaskFormatter formatter = new MaskFormatter("##/##/####");
        formatter.setPlaceholderCharacter('_');
        jFormattedTextField1.setFormatterFactory(new DefaultFormatterFactory(formatter));
        jFormattedTextField1.setColumns(10); // Establecer el número de columnas para ajustar el tamaño del campo
        jFormattedTextField1.setFocusLostBehavior(JFormattedTextField.COMMIT); // Confirmar el valor al perder el foco
    } catch (ParseException ex) {
        ex.printStackTrace();
    }
      jTextField1.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filtrarPorCodigo(jTextField1.getText());
    }
});

// Agregar DocumentListener para jFormattedTextField1
jFormattedTextField1.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filtrarPorFecha(jFormattedTextField1.getText());
    }
});
String[] estados = {"TODOS", "PENDIENTE", "PLANIFICADO", "EN CAMINO", "DEVUELTO", "ENTREGADO"};

    jComboBox1.setModel(new DefaultComboBoxModel<>(estados));

    jComboBox1.setSelectedItem("TODOS");

    jComboBox1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Obtén el estado seleccionado del jComboBox1 y conviértelo a minúsculas
            String estadoSeleccionado = ((String) jComboBox1.getSelectedItem()).toLowerCase();
            // Si se selecciona "TODOS", mostrar todos los paquetes
            if (estadoSeleccionado.equals("todos")) {
                mostrarTodosLosPaquetes();
            } else {
                // Filtra la tabla por estado
                filtrarPorEstado(estadoSeleccionado);
            }
        }
    });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablafiltrar = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablafiltrar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tablafiltrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo del paquete", "Descripcion", "Emisor", "Receptor", "Domicilio de retiro", "Domicilio de entrega", "Estado", "Fecha Recibido"
            }
        ));
        jScrollPane1.setViewportView(tablafiltrar);

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextField1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Codigo del paquete:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setText("Fecha:");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Consultar estado del paquete");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(200, 200, 200)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Menu atras = new Menu(rolUsuario);
        atras.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
   private void inicializarVentana() {
        tablafiltrar.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = tablafiltrar.getSelectedRow();
            if (selectedRow >= 0) {
                paqueteSeleccionado = paquetes.get(selectedRow);
                // Realizar cualquier acción adicional que desees con el paquete seleccionado
                // por ejemplo: mostrar sus detalles en otra parte de la interfaz gráfica
            }
        });
    }
   
  private void mostrarPaquetesEnTabla(List<Paquete> paquetes) {
    DefaultTableModel modelo = (DefaultTableModel) tablafiltrar.getModel();
    modelo.setRowCount(0); // Elimina todas las filas existentes en la tabla

    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

    for (Paquete paquete : paquetes) {
        String nombreApellidoEmisor = "Sin emisor";
        if (paquete.getEmisor() != null) {
            nombreApellidoEmisor = paquete.getEmisor().getNombre() + " " + paquete.getEmisor().getApellido();
        }
        String nombreApellidoReceptor = "Sin receptor";
        if (paquete.getReceptor() != null) {
            nombreApellidoReceptor = paquete.getReceptor().getNombre() + " " + paquete.getReceptor().getApellido();
        }

        String fechaRecibido = dateFormat.format(paquete.getFechaRecibido());

        modelo.addRow(new Object[]{
            paquete.getCodigo_paquete(),
            paquete.getDescripcion(),
            nombreApellidoEmisor,
            nombreApellidoReceptor,
            paquete.getDomicilioRetiro(),
            paquete.getDomicilioEntrega(),
            paquete.getEstado(),
            fechaRecibido
            
        });
    }
}



   private void mostrarTodosLosPaquetes() {
        paquetes = controladoraPaquete.obtenerTodosLosPaquetes();
        mostrarPaquetesEnTabla(paquetes);
    }
   
  private void filtrarPorCodigo(String codigoPaqueteTexto) {
    List<Paquete> paquetesFiltrados = new ArrayList<>();
    if (codigoPaqueteTexto.isEmpty()) {
        mostrarTodosLosPaquetes(); // Si el campo de texto está vacío, mostrar todos los paquetes
    } else {
        try {
            int codigoPaquete = Integer.parseInt(codigoPaqueteTexto);
            for (Paquete paquete : paquetes) {
                if (String.valueOf(paquete.getCodigo_paquete()).contains(codigoPaqueteTexto)) {
                    paquetesFiltrados.add(paquete);
                }
            }
            mostrarPaquetesEnTabla(paquetesFiltrados);
        } catch (NumberFormatException ex) {
            System.out.println("Ingrese un número válido para el código de paquete.");
        }
    }
}


private void filtrarPorFecha(String fechaTexto) {
    List<Paquete> paquetesFiltrados = new ArrayList<>();
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    try {
        // Verificar si el campo de fecha no está vacío y contiene una fecha completa
        if (!fechaTexto.isEmpty() && fechaTexto.matches("\\d{2}/\\d{2}/\\d{4}")) {
            java.util.Date fechaFiltro = dateFormat.parse(fechaTexto);
            for (Paquete paquete : paquetes) {
                if (paquete.getFechaRecibido().equals(fechaFiltro)) {
                    paquetesFiltrados.add(paquete);
                }
            }
            mostrarPaquetesEnTabla(paquetesFiltrados);
        } else {
            // Si el campo de fecha está vacío o no contiene una fecha completa, mostrar todos los paquetes
            mostrarTodosLosPaquetes();
        }
    } catch (ParseException ex) {
        System.out.println("Ingrese una fecha válida en el formato dd/MM/yyyy.");
    }
}

private void mostrarEstadoPaquete() {
    // Muestra un JOptionPane con el estado del paquete
    // Crear un JLabel para personalizar el mensaje
    JLabel estadopaquete = new JLabel("Estado del paquete: " + paqueteSeleccionado.getEstado());
    // Establecer la fuente del JLabel
    estadopaquete.setFont(new Font("Arial", Font.PLAIN, 18));
    // Mostrar el cuadro de diálogo de información con el JLabel personalizado y el título personalizado
    JOptionPane.showMessageDialog(this, estadopaquete, "Estado del Paquete", JOptionPane.INFORMATION_MESSAGE);

}
private void filtrarPorEstado(String estado) {
    estado = estado.toLowerCase();

    List<Paquete> paquetesFiltrados = new ArrayList<>();
    for (Paquete paquete : paquetes) {
        String estadoPaquete = paquete.getEstado().toLowerCase();
        if (estadoPaquete.equals(estado)) {
            paquetesFiltrados.add(paquete);
        }
    }
    mostrarPaquetesEnTabla(paquetesFiltrados);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablafiltrar;
    // End of variables declaration//GEN-END:variables
}
