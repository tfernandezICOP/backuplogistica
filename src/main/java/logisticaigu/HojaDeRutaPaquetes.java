/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package logisticaigu;

import Controladoras.ControladoraPaquete;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import logisticalogica.Paquete;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;



/**
 *
 * @author ULTRA
 */
public class HojaDeRutaPaquetes extends javax.swing.JFrame {

    /**
     * Creates new form HojaDeRutaPaquetes
     */
    private int viajeID;
    private ControladoraPaquete ctrlPaquete;
    private String rolUsuario;
    public HojaDeRutaPaquetes(int viajeID, String rolUsuario) {
        initComponents();
        this.viajeID = viajeID;
        this.rolUsuario = rolUsuario;
        this.ctrlPaquete = new ControladoraPaquete();
        cargarPaquetesPlanificados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nro de Paquete", "Origen", "Domicilio Origen", "Destino", "Domicilio Destino", "Emisor", "Receptor", "Descripcion"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Descargar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(787, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        HojaDeRuta atras = new HojaDeRuta(rolUsuario);
        atras.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    Document documento = new Document(PageSize.A4.rotate());
    try {
        String ruta = System.getProperty("user.home") + "/Desktop/HojaDeRuta.pdf";
        PdfWriter.getInstance(documento, new FileOutputStream(ruta));
        documento.open();
        
        // Título del documento
        Font fontTitulo = new Font(Font.FontFamily.TIMES_ROMAN, 20, Font.BOLD);
        Paragraph titulo = new Paragraph("Encomiendas Patria Hoja de Ruta", fontTitulo);
        titulo.setAlignment(Element.ALIGN_CENTER);
        documento.add(titulo);
        
        // Separador
        documento.add(new Paragraph("\n"));
        
        PdfPTable tabla = new PdfPTable(8);
        tabla.setWidthPercentage(100);
        tabla.setSpacingBefore(10f);
        tabla.setSpacingAfter(10f);
        
        PdfPCell[] cells = new PdfPCell[8];
        String[] headers = {"Numero de Paquete", "Provincia Origen", "Localidad Origen", "Provincia Destino", "Localidad Destino", "Emisor", "Receptor", "Descripcion"};
        
        // Encabezados de la tabla
        Font fontHeader = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
        for (int i = 0; i < headers.length; i++) {
            cells[i] = new PdfPCell(new Phrase(headers[i], fontHeader));
            cells[i].setHorizontalAlignment(Element.ALIGN_CENTER);
            tabla.addCell(cells[i]);
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                tabla.addCell(model.getValueAt(i, j).toString());
            }
        }

        documento.add(tabla);
        documento.close();
        JOptionPane.showMessageDialog(null, "PDF creado correctamente en el escritorio.", "Información", JOptionPane.INFORMATION_MESSAGE);
    } catch (DocumentException | IOException e) {
        JOptionPane.showMessageDialog(null, "Error al crear el PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

 private void cargarPaquetesPlanificados() {
    List<Paquete> paquetesPlanificados = ctrlPaquete.obtenerPaquetesPlanificadosPorViaje(viajeID);

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    model.setRowCount(0);

    for (Paquete paquete : paquetesPlanificados) {
        String nombreApellidoEmisor = paquete.getEmisor().getNombre() + " " + paquete.getEmisor().getApellido();
        String nombreApellidoReceptor = paquete.getReceptor().getNombre() + " " + paquete.getReceptor().getApellido();
        
        // Concatenar provincia y localidad para origen y destino
        String origenCompleto = paquete.getOrigen().getNombre() + ", " + paquete.getLocalidadOrigen().getNombre();
        String destinoCompleto = paquete.getDestino().getNombre() + ", " + paquete.getLocalidadDestino().getNombre();
        
        model.addRow(new Object[]{
            paquete.getPaqueteID(),
            origenCompleto,
            paquete.getDomicilioRetiro(),
            destinoCompleto,
            paquete.getDomicilioEntrega(),
            nombreApellidoEmisor,
            nombreApellidoReceptor,
            paquete.getDescripcion()
        });
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
